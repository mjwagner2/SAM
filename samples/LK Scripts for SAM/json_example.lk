////////////////////////////////////////////////////////////////////////////////
//
// This script demonstrates some ways to work with JSON formatted data returned 
// by a web service.
//
// The json_read() function converts a JSON string into a table variable.
//
// One way to check for valid JSON is to check the type of the variable returned
// by json_read(): If it is not a table, then it is not valid JSON.
//
// When json_read() returns a string instead of a table, the string may include
// 'json-error', which can be used as another test for invalid JSON.
//
// Written and tested in SAM 2017.9.5 r4
//
////////////////////////////////////////////////////////////////////////////////

outln( '--- Valid JSON Example ---' );
json_str = curl( 'http://ip.jsontest.com/' );
var = json_read( json_str );
tvar = typeof( var);
outln( 'json_str\t\t' + json_str );
outln( 'var\t\t' + var );
outln ( 'var.ip\t\t' + var.ip );
outln( 'tvar\t\t' + tvar );
outln( '(tvar== \"table\")\t' + (tvar == 'table') );

outln();
outln( '--- Invalid JSON Example 1 ---' );
json_str = curl( 'https://www.google.com' );
var = json_read( json_str );
tvar = typeof( var);
test = strpos( var , 'json-error' );
outln( 'json_str\t\t' + json_str );
outln( 'var\t\t' + var );
outln( 'tvar\t\t' + tvar );
outln( '(tvar== \"table\")\t' + (tvar == 'table') );
outln( 'test\t\t' + test );
outln();

outln();
outln( '--- Invalid JSON Example 2 ---' );
json_str = curl( 'blah blah blah' );
var = json_read( json_str );
tvar = typeof( var);
test = strpos( var , 'json-error' );
outln( 'json_str\t\t' + json_str );
outln( 'var\t\t' + var );
outln( 'tvar\t\t' + tvar );
outln( '(tvar== \"table\")\t' + (tvar == 'table') );
outln( 'test\t\t' + test );
outln();

outln();
outln( '--- Invalid JSON Example 3 ---' );
json_str = 'blah blah blah';
var = json_read( json_str );
tvar = typeof( var);
test = strpos( var , 'json-error' );
outln( 'json_str\t\t' + json_str );
outln( 'var\t\t' + var );
outln( 'tvar\t\t' + tvar );
outln( '(tvar== \"table\")\t' + (tvar == 'table') );
outln( 'test\t\t' + test );
outln();